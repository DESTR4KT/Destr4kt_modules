from .. import loader, utils
import time, datetime, psutil, platform, subprocess

@loader.tds
class ServInfoMod(loader.Module):
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –±–æ—Ç–∞"""
    strings = {"name": "ServInfo", "version": "1.7.1"}

    async def client_ready(self, client, db):
        self.premium = getattr(await client.get_me(), 'premium', False)

    async def servinfocmd(self, message):
        """–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
        start = time.time()
        
        # Emoji —Ç–æ–ª—å–∫–æ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
        EMOJI = {
            'header': "<emoji document_id=5877260593903177342>‚öô</emoji>" if self.premium else "üñ•Ô∏è",
            'bot_header': "<emoji document_id=5310095495153065318>‚óΩÔ∏è</emoji>" if self.premium else "ü§ñ",
            'dev': "<emoji document_id=5890925363067886150>‚ú®</emoji>"
        }

        await message.edit(f"{EMOJI['header']} <b>–ê–Ω–∞–ª–∏–∑ —Å–∏—Å—Ç–µ–º—ã...</b>", parse_mode='html')

        try:
            # –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            os_info = subprocess.getoutput("lsb_release -d").split(":")[1].strip() if platform.system() == "Linux" else platform.system()
            net = psutil.net_io_counters()
            proc = psutil.Process()
            
            result = (
                f"<b>{EMOJI['header']} –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>\n"
                f"<b>OS:</b> {os_info}\n"
                f"<b>–Ø–¥—Ä–æ:</b> {platform.release()}\n"
                f"<b>CPU:</b> {psutil.cpu_count()} —è–¥–µ—Ä, {psutil.cpu_percent()}%\n"
                f"<b>RAM:</b> {psutil.virtual_memory().used/1024/1024:.1f}MB/{psutil.virtual_memory().total/1024/1024:.1f}MB\n"
                f"<b>Disk:</b> {psutil.disk_usage('/').used/1024/1024/1024:.1f}GB/{psutil.disk_usage('/').total/1024/1024/1024:.1f}GB\n"
                f"<b>–°–µ—Ç—å:</b> ‚ñ≤ {net.bytes_sent/1024/1024:.1f}MB ‚ñº {net.bytes_recv/1024/1024:.1f}MB\n"
                f"<b>–ü—Ä–æ—Ü–µ—Å—Å—ã:</b> {len(psutil.pids())}\n"
                f"<b>–ê–ø—Ç–∞–π–º:</b> {str(datetime.timedelta(seconds=int(time.time() - psutil.boot_time())))}\n\n"
                
                f"<b>{EMOJI['bot_header']} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ</b>\n"
                f"<b>–í—Ä–µ–º—è:</b> {datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n"
                f"<b>–ü–∏–Ω–≥:</b> {(time.time() - start) * 1000:.2f}–º—Å\n"
                f"<b>–ü–∞–º—è—Ç—å:</b> {proc.memory_info().rss/1024/1024:.1f}MB\n"
                f"<b>–ê–ø—Ç–∞–π–º:</b> {str(datetime.timedelta(seconds=int(time.time() - proc.create_time())))}\n\n"
                
                f"{EMOJI['dev']} developer @g4ivx | dev_test | v1.7.1"
            )
            
            await message.edit(result, parse_mode='html')
        except Exception as e:
            await message.edit(f"‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> {str(e)}", parse_mode='html')
