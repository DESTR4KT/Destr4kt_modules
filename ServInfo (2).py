from .. import loader, utils
import time
import datetime
import psutil
import platform
import subprocess

@loader.tds
class ServInfoMod(loader.Module):
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –±–æ—Ç–∞"""
    strings = {
        "name": "ServInfo",
        "version": "1.6.1",
        "description": "–ü–æ–ª–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –±–æ—Ç–∞"
    }

    async def servinfocmd(self, message):
        """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
        start = time.time()
        
        # –ö–∞—Å—Ç–æ–º–Ω—ã–µ emoji (–æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å)
        SERVER_EMOJI = "<emoji document_id=5775870512127283512>üçè</emoji>"
        BOT_EMOJI = "<emoji document_id=6035084557378654059>üë§</emoji>"
        DEV_EMOJI = "<emoji document_id=5890925363067886150>‚ú®</emoji>"
        
        # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ emoji –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–æ–∫
        EMOJI = {
            'os': "üñ•Ô∏è",
            'kernel': "‚öôÔ∏è",
            'cpu': "üß†", 
            'ram': "üíæ",
            'disk': "üíΩ",
            'net': "üåê",
            'proc': "üîÑ",
            'uptime': "‚è±Ô∏è",
            'time': "üïí",
            'ping': "üì∂",
            'mem': "üìä"
        }
        
        await message.edit(f"{SERVER_EMOJI} <b>–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö...</b>", parse_mode='html')
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –û–°
            try:
                os_info = subprocess.check_output("lsb_release -d", shell=True).decode().split(":")[1].strip()
            except:
                os_info = platform.system()
            
            # –°–µ—Ç–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
            net = psutil.net_io_counters()
            
            # –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
            now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            ping = (time.time() - start) * 1000
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–≤–æ–¥–∞
            result = (
                f"{SERVER_EMOJI} <b>–°–µ—Ä–≤–µ—Ä–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>\n"
                f"{EMOJI['os']} <b>OS:</b> {os_info}\n"
                f"{EMOJI['kernel']} <b>–Ø–¥—Ä–æ:</b> {platform.release()}\n"
                f"{EMOJI['cpu']} <b>CPU:</b> {psutil.cpu_count()} —è–¥–µ—Ä, {psutil.cpu_percent()}%\n"
                f"{EMOJI['ram']} <b>RAM:</b> {psutil.virtual_memory().used/1024/1024:.1f}MB/{psutil.virtual_memory().total/1024/1024:.1f}MB\n"
                f"{EMOJI['disk']} <b>Disk:</b> {psutil.disk_usage('/').used/1024/1024/1024:.1f}GB/{psutil.disk_usage('/').total/1024/1024/1024:.1f}GB\n"
                f"{EMOJI['net']} <b>–°–µ—Ç—å:</b> ‚ñ≤ {net.bytes_sent/1024/1024:.1f}MB ‚ñº {net.bytes_recv/1024/1024:.1f}MB\n"
                f"{EMOJI['proc']} <b>–ü—Ä–æ—Ü–µ—Å—Å—ã:</b> {len(psutil.pids())}\n"
                f"{EMOJI['uptime']} <b>Uptime:</b> {str(datetime.timedelta(seconds=int(time.time() - psutil.boot_time())))}\n\n"
                
                f"{BOT_EMOJI} <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ</b>\n"
                f"{EMOJI['time']} <b>–í—Ä–µ–º—è:</b> {now}\n"
                f"{EMOJI['ping']} <b>–ü–∏–Ω–≥:</b> {ping:.2f}–º—Å\n"
                f"{EMOJI['mem']} <b>–ü–∞–º—è—Ç—å:</b> {psutil.Process().memory_info().rss/1024/1024:.1f}MB\n"
                f"{EMOJI['uptime']} <b>Uptime:</b> {str(datetime.timedelta(seconds=int(time.time() - psutil.Process().create_time())))}\n\n"
                
                f"{DEV_EMOJI} developer @g4ivx | dev_test | v1.6.1"
            )
            
            await message.edit(result, parse_mode='html')
        except Exception as e:
            await message.edit(f"‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> {str(e)}", parse_mode='html')